{"remainingRequest":"C:\\Users\\Alan\\Documents\\vue\\FactorHumano\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Alan\\Documents\\vue\\FactorHumano\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Alan\\Documents\\vue\\FactorHumano\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Alan\\Documents\\vue\\FactorHumano\\src\\components\\RegistroUser.vue?vue&type=template&id=36135864&","dependencies":[{"path":"C:\\Users\\Alan\\Documents\\vue\\FactorHumano\\src\\components\\RegistroUser.vue","mtime":1572976030838},{"path":"C:\\Users\\Alan\\Documents\\vue\\FactorHumano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alan\\Documents\\vue\\FactorHumano\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Alan\\Documents\\vue\\FactorHumano\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Alan\\Documents\\vue\\FactorHumano\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}